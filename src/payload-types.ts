/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    property: Property;
    propertyType: PropertyType;
    'contact-us': ContactUs;
    location: Location;
    users: User;
    media: Media;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    property: PropertySelect<false> | PropertySelect<true>;
    propertyType: PropertyTypeSelect<false> | PropertyTypeSelect<true>;
    'contact-us': ContactUsSelect<false> | ContactUsSelect<true>;
    location: LocationSelect<false> | LocationSelect<true>;
    users: UsersSelect<false> | UsersSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: number;
  };
  globals: {
    contact: Contact;
  };
  globalsSelect: {
    contact: ContactSelect<false> | ContactSelect<true>;
  };
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "property".
 */
export interface Property {
  id: number;
  slug: string;
  prop_name: string;
  prop_price: number;
  prop_location: number | Location;
  images: {
    image: number | Media;
    id?: string | null;
  }[];
  prop_desc?: string | null;
  bedrooms?: number | null;
  home_interior_bedrooms?: string | null;
  bathrooms?: number | null;
  home_interior_bathroom?: string | null;
  home_interior_kitchen?: string | null;
  home_interior_dining?: string | null;
  home_interior_Living?: string | null;
  garages?: number | null;
  home_exterior_garage?: string | null;
  prop_size: number;
  home_exterior_balcony?: string | null;
  home_exterior_accessibility?: string | null;
  home_exterior_backyard?: string | null;
  home_exterior_terrace?: string | null;
  prop_type: number | PropertyType;
  lot_area?: number | null;
  prop_destination: string;
  prop_status?: string | null;
  prop_ownership?: string | null;
  prop_year: string;
  prop_pkSpace?: string | null;
  prop_furnishing?: string | null;
  prop_discount?: string | null;
  prop_featured?: boolean | null;
  prop_offer?: boolean | null;
  feature_gated?: boolean | null;
  feature_spacious?: boolean | null;
  feature_kitchen_cabinets?: boolean | null;
  feature_bedroom?: boolean | null;
  feature_covered_garage?: boolean | null;
  feature_frontyard?: boolean | null;
  feature_proximity?: boolean | null;
  feature_internet?: boolean | null;
  feature_play_clubhouse?: boolean | null;
  feature_pet_friendly?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "location".
 */
export interface Location {
  id: number;
  location_city: string;
  location_province: string;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "propertyType".
 */
export interface PropertyType {
  id: number;
  property_type: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "contact-us".
 */
export interface ContactUs {
  id: number;
  name: string;
  email: string;
  phone: string;
  message: string;
  createdAt: string;
  emailSent?: boolean | null;
  updatedAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number;
  document?:
    | ({
        relationTo: 'property';
        value: number | Property;
      } | null)
    | ({
        relationTo: 'propertyType';
        value: number | PropertyType;
      } | null)
    | ({
        relationTo: 'contact-us';
        value: number | ContactUs;
      } | null)
    | ({
        relationTo: 'location';
        value: number | Location;
      } | null)
    | ({
        relationTo: 'users';
        value: number | User;
      } | null)
    | ({
        relationTo: 'media';
        value: number | Media;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "property_select".
 */
export interface PropertySelect<T extends boolean = true> {
  slug?: T;
  prop_name?: T;
  prop_price?: T;
  prop_location?: T;
  images?:
    | T
    | {
        image?: T;
        id?: T;
      };
  prop_desc?: T;
  bedrooms?: T;
  home_interior_bedrooms?: T;
  bathrooms?: T;
  home_interior_bathroom?: T;
  home_interior_kitchen?: T;
  home_interior_dining?: T;
  home_interior_Living?: T;
  garages?: T;
  home_exterior_garage?: T;
  prop_size?: T;
  home_exterior_balcony?: T;
  home_exterior_accessibility?: T;
  home_exterior_backyard?: T;
  home_exterior_terrace?: T;
  prop_type?: T;
  lot_area?: T;
  prop_destination?: T;
  prop_status?: T;
  prop_ownership?: T;
  prop_year?: T;
  prop_pkSpace?: T;
  prop_furnishing?: T;
  prop_discount?: T;
  prop_featured?: T;
  prop_offer?: T;
  feature_gated?: T;
  feature_spacious?: T;
  feature_kitchen_cabinets?: T;
  feature_bedroom?: T;
  feature_covered_garage?: T;
  feature_frontyard?: T;
  feature_proximity?: T;
  feature_internet?: T;
  feature_play_clubhouse?: T;
  feature_pet_friendly?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "propertyType_select".
 */
export interface PropertyTypeSelect<T extends boolean = true> {
  property_type?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "contact-us_select".
 */
export interface ContactUsSelect<T extends boolean = true> {
  name?: T;
  email?: T;
  phone?: T;
  message?: T;
  createdAt?: T;
  emailSent?: T;
  updatedAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "location_select".
 */
export interface LocationSelect<T extends boolean = true> {
  location_city?: T;
  location_province?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "contact".
 */
export interface Contact {
  id: number;
  phone_number: number;
  email: string;
  address: string;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "contact_select".
 */
export interface ContactSelect<T extends boolean = true> {
  phone_number?: T;
  email?: T;
  address?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}